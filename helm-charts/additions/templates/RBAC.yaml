{{- if .Values.RBAC.enabled -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: acc-mem
  namespace: mem
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: acc-app
  namespace: app
---
# Inizio permessi traffic controller
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role-tst
  namespace: tst
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role-dmz
  namespace: dmz
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  resourceNames: ["frontend-proxy", "image-provider"]
  verbs: ["get", "update", "patch"]
- apiGroups: [""]
  resources: ["services"]
  resourceNames: ["frontend-proxy", "image-provider"]
  verbs: ["get", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role-coredns
  namespace: kube-system
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  resourceNames: ["coredns"]
  verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: traffic-controller-dmz
  namespace: dmz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: role-dmz
subjects:
- kind: ServiceAccount
  name: acc-mem
  namespace: mem
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: traffic-controller-tst
  namespace: tst
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: role-tst
subjects:
- kind: ServiceAccount
  name: acc-mem
  namespace: mem
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: traffic-controller-ks
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: role-coredns
subjects:
- kind: ServiceAccount
  name: acc-mem
  namespace: mem
# Fine permessi traffic controller
---
# Inizio utente anonimo
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: app
  name: anon-configmap-reader
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: mem
  name: anon-configmap-reader
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: list-resources-proxy
rules:
- apiGroups: [""]
  resources:
    - pods/proxy
    - services/proxy
    - nodes/proxy        # proxy verso kubelet
  verbs: ["get","create"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: app
  name: anon-configmap-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: anon-configmap-reader
subjects:
- kind: User
  name: system:anonymous
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: mem
  name: anon-configmap-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: anon-configmap-reader
subjects:
- kind: User
  name: system:anonymous
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: allow-unauthenticated-list-resources-proxy
subjects:
- kind: Group
  name: system:unauthenticated
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: list-resources-proxy
  apiGroup: rbac.authorization.k8s.io
# Fine utente anonimo
---
# Inizio permessi currency
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: job-and-secret-access
  namespace: app
rules:
  # Permesso di creare Job
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["create", "get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["dbcurrency-creds"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: job-and-secret-access-binding
  namespace: app
subjects:
  - kind: ServiceAccount
    name: acc-app
    namespace: app
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: job-and-secret-access
# Fine permessi currency
---
# Inizio permessi image-updater
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: updater-role
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "patch", "update", "create"]
# Leggere/creare/aggiornare PVC nella/e namespace in cui lavori
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# (Opzionale ma utile) Leggere StorageClass per scegliere lo storage
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list"]
# (Opzionale) Solo lettura dei PV per debug/visibilit√†
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list"]
- apiGroups: ["batch"]
  resources: ["cronjobs"]
  verbs: ["get", "list", "create", "patch", "update"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: updater-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: updater-role
subjects:
- kind: ServiceAccount
  name: updater-sa
  namespace: mem
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: updater-sa
  namespace: mem
# Fine permessi image-updater
{{- end }}
