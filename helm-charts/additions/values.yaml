default:
  image:
    repository: registry:5000
    version: "2.0.2"
    pullPolicy: IfNotPresent

networkPolicies:
  enabled: false
  allowKubeAPIServer: true
  defaultDeny: true
  allowSameNamespace: true
  podSelector: {}
  internet:
    mode: world
    egressCidrs: []
    ingressCidrs: []
    exceptCidrs:
      - "10.96.0.0/12"
      - "10.244.0.0/16"
  rules:
    dmz:
      name: "dmz"
      ingress: "app, mem, tst, kube-system"
      egress:  "app, mem, tst, kube-system"
      allowInternetEgress: true
      allowInternetIngress: true
    pay:
      name: "pay"
      ingress: "app, dat, mem, kube-system"
      egress:  "app, dat, mem, kube-system"
      allowInternetEgress: false
      allowInternetIngress: false
    app:
      name: "app"
      ingress: "dat, dmz, mem, pay, kube-system"
      egress:  "dat, dmz, mem, pay, kube-system"
      allowInternetEgress: false
      allowInternetIngress: false
    dat:
      name: "dat"
      ingress: "app, mem, pay, kube-system"
      egress:  "app, mem, pay, kube-system"
      allowInternetEgress: false
      allowInternetIngress: false
    mem:
      name: "mem"
      ingress: "app, dat, dmz, pay, tst, kube-system"
      egress:  "app, dat, dmz, pay, tst, kube-system"
      allowInternetEgress: true
      allowInternetIngress: false
    tst:
      name: "tst"
      ingress: "dmz, mem, kube-system"
      egress:  "dmz, mem, kube-system"
      allowInternetEgress: true
      allowInternetIngress: false

caldera:
  enabled: false
  namespace: "dmz"
  host: "caldera.dock"
  port: 8888

postgres: 
  enabled: false
  namespace: "dat"
  postgres:
    image: registry:5000/postgres:2.0.2
    db: currency
    secretName: dbcurrency
    nodeGroup: NotAttacker
  postgres-auth:
    image: registry:5000/postgres-auth:2.0.2
    db: users
    secretName: dbauth
    nodeGroup: NodeAttacker
  postgres-payment:
    image: registry:5000/postgres-payment:2.0.2
    db: payments
    secretName: dbpayment
    nodeGroup: NodeAttacker

config:
  enabled: false
  configmaps:
    flagd-credentials-ui:
      namespace: "mem"
      data: 
        FLAGD_UI_USER: "admin" 
        FLAGD_UI_PASS: "elia" 
    proto:
      namespace: "app"
      dataFromFile: "files/demo.proto"
    product-catalog-products:
      namespace: "app"
      dataFromFile: "files/products.json"
    flagd-config:
      namespace: "mem"
      dataFromFile: "files/demo.flagd.json"
  secrets:
    dbcurrency-creds:
      namespace: "app"
      data: 
        username: "postgres" 
        password: "yourpassword"
    dbcurrency:
      namespace: "dat"
      data: 
        username: "postgres" 
        password: "yourpassword"
    dbpayment:
      namespace: "dat"
      data: 
        username: "payments_rw" 
        password: "payments_rw_pwd"
    dbauth:
      namespace: "dat"
      data: 
        username: "testuser" 
        password: "testpassword"
    smb-creds:
      namespace: "mem"
      data:
        username: "k8s"
        password: "password"

RBAC:
  enabled: false

namespaces:
  enabled: false
  list: "app, tst, dmz, dat, pay, mem"

pool:
  enabled: false
  ips: "172.18.0.200-172.18.0.250"