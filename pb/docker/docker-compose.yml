x-build-common: &buildkit
services:
  # ===== Network components =====
  registry:
    container_name: ${REGISTRY_NAME}
    image: registry:2
    hostname: ${REGISTRY_NAME:-caldera.cont}
    restart: always
    networks: [kind]
    ports:
      - "${REGISTRY_PORT}:${REGISTRY_PORT}"
    environment:
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
      REGISTRY_HTTP_ADDR: "0.0.0.0:${REGISTRY_PORT}"
      REGISTRY_AUTH: "htpasswd"
      REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
      REGISTRY_AUTH_HTPASSWD_PATH: "/auth/htpasswd"
      REGISTRY_HTTP_TLS_CERTIFICATE: "/auth/certs/domain.crt"
      REGISTRY_HTTP_TLS_KEY: "/auth/certs/domain.key"
    volumes:
      - "./registry:/auth"
      
  load-generator:
    container_name: ${LOAD_GENERATOR:-load-generator}
    image: load-generator:${IMAGE_VERSION:-2.0.2}
    hostname: ${LOAD_GENERATOR:-load-generator}
    restart: unless-stopped
    networks: [kind]
    build:
      context: ../../src/load-generator
      dockerfile: ../../src/load-generator/Dockerfile
    environment:
      PLAYWRIGHT_BROWSERS_PATH: "/opt/pw-browsers"
      LOCUST_WEB_HOST: "0.0.0.0"
      LOCUST_WEB_PORT: "8089"
      LOCUST_USERS: "20"
      LOCUST_SPAWN_RATE: "10" 
      LOCUST_HOST: "http://proxy:8080" 
      LOCUST_HEADLESS: "true" 
      LOCUST_AUTOSTART: "true" 
      LOCUST_BROWSER_TRAFFIC_ENABLED: "true"

  samba:
    container_name: samba-pv
    image: samba:${IMAGE_VERSION:-2.0.2}
    hostname: samba-pv
    restart: unless-stopped
    networks: [kind]
    build:
      context: ../../src/samba
      dockerfile: Dockerfile
    environment:
      TZ: Europe/Rome
      SAMBA_USER: k8s
      SAMBA_PASS: password
      SAMBA_UID: "10001"
      SAMBA_GID: "10001"
      SHARE_NAME: pvroot
      SHARE_PATH: /share
      HOSTS_ALLOW: "127. 172.18.0. 172.19.0."
      ENCRYPTION: required
      LOG_LEVEL: "1"
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
    read_only: false
    tmpfs:
      - /run/samba:size=16m,mode=0755
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 445"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  proxy:
    container_name: proxy
    image: nginx:1.27-alpine
    hostname: proxy
    restart: unless-stopped
    networks: [kind]
    ports:
      - "0.0.0.0:8888:8888"
      - "0.0.0.0:8080:8080"
    environment:
      CALDERA_SERVER: ${CALDERA_SERVER}
      FRONTEND_PROXY: ${LOAD_BALANCER_IP}
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
    volumes:
      - ./proxy/nginx.conf.template:/etc/nginx/templates/nginx.conf.template:ro
      - ./proxy/conf.d-empty/:/etc/nginx/conf.d:ro
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 10s
      timeout: 3s
      retries: 5
    depends_on:
      - caldera-server

  # ===== Caldera =====
  caldera-controller:
    container_name: ${CALDERA_CONTROLLER:-caldera.cont}
    image: caldera-controller:${IMAGE_VERSION:-2.0.2}
    hostname: ${CALDERA_CONTROLLER:-caldera.cont}
    restart: unless-stopped
    networks: [kind]
    build:
      context: ../../src/caldera-controller
      dockerfile: ../../src/caldera-controller/Dockerfile
    environment:
      CALDERA_URL: "http://${CALDERA_SERVER}:8888"

  attacker:
    container_name: ${CALDERA_OUTSIDE:-caldera.outs}
    image: attacker:${IMAGE_VERSION:-2.0.2}
    hostname: ${ATTACKER:-caldera.outs}
    restart: unless-stopped
    networks: [kind]
    build:
      context: ../../src/attacker
      dockerfile: ../../src/attacker/Dockerfile
      args:
        SMTP_IP: ${SMTP_IP}
        DOCKER_DAEMON: "1"
        CALDERA_URL: "http://${CALDERA_SERVER}:8888"
        GROUP: "outside"
    privileged: true
    environment:
      WAIT: "0"
      HOSTREGISTRY: "$REGISTRY_NAME:$REGISTRY_PORT"
      ARP_VICTIM: "load-generator"
      LOAD_BALANCER_IP: ${LOAD_BALANCER_IP}
      API_SERVER: ${API_SERVER:-https://kind-cluster-control-plane:6443}
      SMTP_IP: ${SMTP_IP:-172.18.0.201}
    volumes:
      - ./apiserver:/apiserver
    depends_on:
      caldera-server:
        condition: service_healthy

  caldera-server:
    container_name: ${CALDERA_SERVER:-caldera.dock}
    image: ghcr.io/mitre/caldera:5.2.0
    hostname: ${CALDERA_SERVER:-caldera.dock}
    restart: unless-stopped
    networks: [kind]
    volumes:
      - ./caldera/local.yml:/usr/src/app/conf/local.yml
      - ./caldera/adversaries:/usr/src/app/plugins/stockpile/data/adversaries/personal
      - ./caldera/abilities:/usr/src/app/plugins/stockpile/data/abilities/personal
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8888/ || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 24
      start_period: 15s

networks:
  kind:
    external: true
    name: kind
