# NGINX come sidecar L7: proxy + mirroring
worker_processes auto;
events { worker_connections 1024; }

http {
  # Risoluzione DNS per l'host di mirroring
  resolver $RESOLVER_IP valid=30s ipv6=off;

  # Log trasparenti (non "invisibili"): raccomandato per audit/compliance
  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log warn;

  # Timeout configurabili
  proxy_connect_timeout  $CONNECT_TIMEOUT;
  proxy_read_timeout     $READ_TIMEOUT;
  proxy_send_timeout     $SEND_TIMEOUT;

  # Upstream primario (IP:PORT da env)
  upstream primary_upstream {
    server $PRIMARY_ADDR max_fails=2 fail_timeout=5s;
  }

  server {
    listen 8080;          # Ingresso richieste dall'app / dal cluster
    listen [::]:8080;

    # Duplica ogni richiesta verso /_mirror subrequest
    # NOTA: la subrequest non influenza la risposta al client.
    location / {
      mirror /_mirror;            # attiva mirroring
      mirror_request_body on;     # duplica anche il body

      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_pass http://primary_upstream;
    }

    # Location “ombra” usata dal mirroring
    location = /_mirror {
      internal;
      # Pass diretto al mirror via nome DNS (host:port)
      proxy_set_header Host $host;
      proxy_pass http://$MIRROR_ADDR$request_uri;
      # Non far fallire la request principale se il mirror non risponde
      proxy_intercept_errors off;
      proxy_next_upstream off;
    }
  }
}
